generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
  user      User[]
  recipes   Recipe[]
}

enum Role {
  OWNER
  MEMBER
}

model User {
  id             String       @id @default(cuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  email          String       @unique
  firstName      String
  lastName       String
  password       Password?
  role           Role         @default(MEMBER)
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  recipes        Recipe[]
}

model Password {
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Recipe {
  id             String       @id @default(cuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  title          String
  servings       Int?
  ingredients    String?
  instructions   String?
  mealType       MealType?    @relation(fields: [mealTypeId], references: [id])
  mealTypeId     String?
  cuisine        Cuisine?     @relation(fields: [cuisineId], references: [id])
  cuisineId      String?
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
}

model MealType {
  id      String   @id @default(cuid())
  name    String
  order   Int      @unique @default(autoincrement())
  recipes Recipe[]
}

model Cuisine {
  id      String   @id @default(cuid())
  name    String
  recipes Recipe[]
}
